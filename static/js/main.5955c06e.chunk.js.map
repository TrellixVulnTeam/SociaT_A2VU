{"version":3,"sources":["tweets/components.js","lookup/components.js","reportWebVitals.js","index.js"],"names":["TweetComponent","props","textAreaRef","React","createRef","_useState","useState","_useState2","Object","slicedToArray","newTweets","setNewTweets","react_default","a","createElement","className","onSubmit","event","preventDefault","newValue","current","value","console","log","tempNewTWeets","toConsumableArray","unshift","content","likes","id","Math","floor","random","ref","required","name","tyoe","TweetList","_useState3","_useState4","tweetsInit","setTweetsInit","_useState5","_useState6","tweets","setTweets","useEffect","finalListTweets","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","message","send","loadTweets","alert","map","item","index","Tweet","tweet","key","ActionBtn","action","_useState7","_useState8","setLikes","_useState9","userLike","_useState10","setUserLike","actionDisplay","display","type","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","sociat","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5955c06e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newValue = textAreaRef.current.value\n    console.log(newValue)\n\n\n    // Look at the \"future-upgrades\" Num1 syntax to make it easier to write\n    let tempNewTWeets = [...newTweets]\n    tempNewTWeets.unshift({\n      content: newValue,\n      likes: 0,\n      id: Math.floor(Math.random() * (500 - 1) + 1)\n    })\n    setNewTweets(tempNewTWeets)\n\n\n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n            <div className='col-12 mb-3'>\n              <form onSubmit={handleSubmit}>\n                  <textarea ref={textAreaRef} required={true}className='form-control' name='tweet'>\n                  </textarea>\n                  <button tyoe='submit' className='btn btn-primary my-3'>Post</button>\n\n              </form>\n            </div>\n          <TweetList newTweets={newTweets} /> \n          </div>\n}\n\n\nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([]);\n    const [tweets, setTweets] = useState([]);\n\n    useEffect(() => {\n      const finalListTweets = [...props.newTweets].concat(tweetsInit)\n      if (finalListTweets.length > tweets.length) {\n        setTweets(finalListTweets);\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response)\n        } else {\n          alert('There was an error.')\n        }\n      }\n      loadTweets(myCallback)\n    }, [tweetsInit])\n    \n    return tweets.map((item, index) => {\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index} - ${item}`}/>\n    })\n  }\n\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleClick = (event) => {\n        event.preventDefault()\n        if (action.type === 'like') {\n            if (userLike === false) {\n                setLikes(likes + 1)\n                setUserLike(true)\n            } else {\n                setLikes(likes - 1)\n                setUserLike(false)\n            }\n        }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n\n  \nexport function Tweet(props) {\n  const {tweet} = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className={className}>\n      <p>\n      {tweet.id} - {tweet.content}\n      </p>\n      <div className='btn btn-group'>\n      <ActionBtn tweet={tweet} action={{type: 'like', display:'Likes'}}/>\n      <ActionBtn tweet={tweet} action={{type: 'unlike', display: 'Unlikes'}}/>\n      <ActionBtn tweet={tweet} action={{type: 'retweet', display: 'Retweet'}}/>\n      </div>\n  </div>\n}\n  ","\n\nexport function loadTweets(callback) {\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = 'http://localhost:8000/api/tweet'\n    const responseType = 'json'\n    xhr.responseType = responseType\n    xhr.open(method, url)\n  \n    xhr.onload = function() {\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n      console.log(e)\n      callback({'message': 'The request was an error'}, 400)\n    }\n    xhr.send()\n  }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TweetComponent } from './tweets';\nimport reportWebVitals from './reportWebVitals';\n\nconst sociat = document.getElementById('sociat')\nReactDOM.render(\n  <React.StrictMode>\n    <TweetComponent />\n  </React.StrictMode>,\n  sociat\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}